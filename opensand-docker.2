#!/bin/bash

command=$1

if [ "$command" = "-h" ]; then
	
	# help printing for opensand-docker command
        cat /home/neuaa/ProjetLong/simulation/opensand-docker/help 

elif [ "$command" = "--simulate" ]; then
	

	#generate a simulation ID
	simulation_id=$3
	echo "==== ${simulation_id} ====" >> output
	
	#launch sand-manager		
	sand-manager &

	manager_id=1
	echo "- sand-manager - ${manager_id}" >> output
	echo "- SAT_INTERFACE: 192.168.1${simulation_id}.1" >> output 

	sleep 5
		
	# docker networks creation for Opensand : opensand-network, opensand-gw-network, lan1, lan2 ...
	/home/neuaa/ProjetLong/simulation/opensand-docker/docker-networks/docker-network-create ${simulation_id} 
	
	# First launching the collector for log
	sudo /home/neuaa/ProjetLong/simulation/opensand-docker/entites/collector/configuration.sh ${simulation_id} &
	collector_id=2	

	sleep 5
	
	# Launching satellite 
	sudo /home/neuaa/ProjetLong/simulation/opensand-docker/entites/SAT/configuration.sh ${simulation_id} &
        sat_id=3 
	
	sleep 5


	#number of parameters given when launching the orchestrator	
	nb_parameters=($#-3)/2

	#initialize indexes for parameters. nb_entities corresponds to the number associated with a given parameter (entity)
	index_parameter=4
	index_nb_entities=5
	for ((i=1;i<=nb_parameters;i++)); do

   		string_parameter='$'${index_parameter}
	 	eval name_parameter="$string_parameter"
		
		# if and elif corresponds to known entities. It's fine !
		if [[ $name_parameter = "-c" || $name_parameter = "--client" ]]; then  
			:	#echo commande client
		elif [[ $name_parameter = "-st" || $name_parameter = "--satellite-terminal" ]] ; then
			:	#echo commande st
		elif [[ $name_parameter = "-gw" || $name_parameter = "--gateway" ]] ; then
			:	#echo commande gateway
		elif [[ $name_parameter = "-sgw" || $name_parameter = "--split-gateway" ]] ; then
			:	#echo commande split gateway
		elif [[ $name_parameter = "-s" || $name_parameter = "--services" ]] ; then
			:	#echo commande service
		
		# a parameter / an entity not existing. please refer to the help with the following command : opensand-docker -h
		else
			echo Parameter does not exist
			exit
		fi

		string_nb_entities='$'${index_nb_entities}
		eval nb_entity="$string_nb_entities"
		
		# deploy gateway(s)		
		if [[ $name_parameter = "-gw" || $name_parameter = "--gateway" ]] ; then  
			if [ $nb_entity -gt 2 ]; then
				echo "More than two gateways is not possible"
				exit  
			else

				created_gw=0
                                while [ ${created_gw} -ne $nb_entity ]
                                do
                                        created_gw=$((created_gw+1))

                                        sudo /home/neuaa/ProjetLong/simulation/opensand-docker/entites/GW/GW${created_gw}/configuration.sh ${simulation_id} &
                                    	
					gw_id=$((sat_id+created_gw))
					
					sleep 5 
				done
			fi
		
		# deploy split gateway(s)
		elif [[ $name_parameter = "-sgw" || $name_parameter = "--split-gateway" ]]; then
			if [ $nb_entity -gt 2 ]; then
                                echo "More than two split gateways is not possible"
                                exit
                        else

				created_gw=0
                                while [ ${created_gw} -ne $nb_entity ]
                                do

                                        created_gw=$((created_gw+1))

					/home/neuaa/ProjetLong/simulation/opensand-docker/entites/SGW/SGW${created_gw}/GW-PHY/configuration.sh ${simulation_id} &
					sleep 5
					
					/home/neuaa/ProjetLong/simulation/opensand-docker/entites/SGW/SGW${created_gw}/GW-NET-ACC/configuration.sh ${simulation_id} &

				        gw_id=$((sat_id+created_gw))

					sleep 5
                                done
                        fi

		# deploy satellite terminal(s)
		elif [[ $name_parameter = "-st" || $name_parameter = "--satellite-terminal" ]]; then
			if [ $nb_entity -gt 5 ]; then
				echo "More than five satellite terminals is not possible"
				exit
			else
				created_st=0
				st_string='ST'
				while [ ${created_st} -ne $nb_entity ]
        			do
                			created_st=$((created_st+1))
					index_st=$created_st
                			name_st="${st_string}${index_st}"
                			sudo /home/neuaa/ProjetLong/simulation/opensand-docker/entites/ST/${name_st}/configuration.sh ${simulation_id} &
                			
                                        st_id=$((gw_id+index_st))
	

					sleep 5
				done

			fi
		
		# deploy clients
                elif [[ $name_parameter = "-c" || $name_parameter = "--client" ]]; then
                        if [ $nb_entity -gt 100 ]; then
                                echo "More than X clients satellite terminals is not possible"
                                exit
                        else
				nb_clients=$nb_entity
				for ((i=1;i<=$created_gw;i++))
                                do
                                        for ((j=1;j<=$nb_clients;j++))
                                        do
                                                sudo /home/neuaa/ProjetLong/simulation/opensand-docker/entites/WS/WS${i}/configuration.sh ${j} ${simulation_id} &
                                                sleep 5
                                        done
                                done
				last_ws=$((3+created_st))
				#index_ws=$((created_gw+1))
				for ((i=3;i<=$last_ws;i++))
                                do
                                        for ((j=1;j<=$nb_clients;j++))
                                        do
                                        	sudo /home/neuaa/ProjetLong/simulation/opensand-docker/entites/WS/WS${i}/configuration.sh ${j} ${simulation_id} &
                                        	sleep 5
                                        done
                                done
			fi

		# deploy services associate  with clients
		elif [[ $name_parameter = "-s" || $name_parameter = "--services" ]]; then
                        if [ $nb_entity != "http" ]; then
                                echo "Only services like http are possible"
                                exit
                        else
                        	:
			fi
                fi

		
		# next parameter
		index_parameter=$((index_parameter+2))
		index_nb_entities=$((index_nb_entities+2))
	done

elif [ "$command" = "--list-simulation" ]; then
	echo test2

elif [ "$command" = "--destroy" ]; then
	sudo docker stop $(docker ps -aq)
	sudo docker rm $(docker ps -aq)
	pgrep avahi| xargs kill
	
	simulation_id=$3
	sudo /home/neuaa/ProjetLong/simulation/opensand-docker/docker-networks/docker-network-destroy ${simulation_id}
else
	echo Command not found
fi
